version: 2.1
defaults: &defaults
  docker:
    - image: cimg/base:stable
  working_directory: ~/
commands:
  destroy-environment:
    steps:
      - run:
          name: destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name cicd-stack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  create-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: create cloudformation stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name cicd-stack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1
  configure-infrastructure:
    docker:
      - image: python:3.11-rc-alpine
      # - image: cimg/python:3.7
    steps:
      - checkout
      - run: python --version
      - add_ssh_keys:
          fingerprints:
            - "51:14:d5:4e:fa:d5:d3:1b:7b:5b:aa:fb:a9:0d:ee:ca"
      - run:
          name: install ansible
          command: |
            apk add --update ansible
      - run:
          name: configure server
          command: |
            ansible-playbook -i inventory main.yml
  smoke-test:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: smoke test
          command: |
            exit 1
      - destroy-environment
  create-and-deploy-frontend:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: execute bucket.yml - create cloudformation stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides BucketName="bucket-${CIRCLE_WORKFLOW_ID:0:7}"
      - run: aws s3 sync . s3://bucket-${CIRCLE_WORKFLOW_ID:0:7} --delete
  get-last-deployment-id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - run:
          name: fetch and save old pipeline Id (bucket name) for the last release
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineId\`].Value" \
            --no-paginate --output text > ~/textfile.txt
      - persist_to_workspace:
          root: ~/
          path:
            - textfile.txt
  promote-to-production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      run:
        name: execute cloudfront.yml
        command: |
          aws cloudformation deploy \
          --template-file cloudfront.yml \
          --stack-name production-distro \
          --parameter-overrides PipelineId="bucket-${CIRCLE_WORKFLOW_ID:0:7}"
  clean-up-old-front-end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - attach_workspace:
          at: ~/
      - run:
          name: destroy previous s3 bucket and cloudformation stack
          command: |
            export OldBucketId=$(cat ~/textfile.txt)
            aws s3 rm "s3://${OldBucketId}" --recursive
workflows:
  workflow1:
    jobs:
      # - create-infrastructure
      # - configure-infrastructure:
      #     requires:
      #       - create-infrastructure
      # - smoke-test:
          # requires:
            # - create-infrastructure
            # - configure-infrastructure
      - create-and-deploy-frontend
      - promote-to-production:
          requires:
            - create-and-deploy-frontend
      - get-last-deployment-id
      - clean-up-old-front-end:
          requires:
            - get-last-deployment-id
            - promote-to-production

